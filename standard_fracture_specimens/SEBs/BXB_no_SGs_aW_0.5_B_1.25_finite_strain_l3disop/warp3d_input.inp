c
c
c ********************************************
c
c    3D SE(B), 1.25T, Plane Sided
c
c ********************************************
c
c     14 Element Layers through the 1/2 thickness:
c        W = B  = 1.252 in
c        a    = 0.5 W
c        Span = 4 W
c
c     Displacement Control
c     Static Loading
c     Large Strain theory (initial crack front radius - 1 mil)
c
c     Non-linear material:
c
c         E      = 30000 ksi
c         sig_ys = 60 ksi
c         n      = 10
c
c     Input from the following files:
c         coordinates.inp
c         incidences.inp
c         constraints.inp
c         domain_define.inp
c
c     Model set up for threaded execution
c
c     Finite strain solution converges thru step 121. At that point
c     the crack tip elements are too deformed
c
c     Set bbar stabilization to 0.02 - 0.05 to increase deformation
c     level before failure
c
c     At step 120:
c      
c       J-avg = 0.46 kip-in/in**2  M= 81
c       J at centerplane = 0.50, M = 75
c
c     Increase initial crack front radius to reach larger global
c     deformations with finite-strain theory.
c
c
c     Solution continues to run to much higher deformation
c     with small strain-theory.
c
c
structure seb_3d
c
material steel $ A533B
   properties  mises  e 30000  nu 0.3  yld_pt 60.0 n_power 10.0,
         rho  0.0
c
number of nodes  19935 elements 17318
c
elements
  1-17318  type l3disop  nonlinear material steel,
           order 2x2x2 bbar center_output short
c
*input from 'coordinates_inches.inp'
c
*input from 'incidences.inp'
*input from 'constraints.inp'
blocking automatic
c
 loading test
  nonlinear
    step 1-200 constraints 1.0
c
 nonlinear analysis parameters
   solution technique direct sparse
   trace solution on
   minimum iterations 2
   maximum iterations 4
   convergence test norm res tol 0.005  $ v. tight
   time step 1.0e06
   extrapolate on
   nonconvergent solution stop
   consistent q off
   adaptive on
   bbar stabilization factor 0.0
c
  compute displacements for loading test for step 10
  *input from 'domain_define.inp'
  compute displacements for loading test for step 20
  *input from 'domain_define.inp'
  compute displacements for loading test for step 30
  *input from 'domain_define.inp'
  compute displacements for loading test for step 40
  *input from 'domain_define.inp'
  compute displacements for loading test for step 50
  *input from 'domain_define.inp'
  compute displacements for loading test for step 60
  *input from 'domain_define.inp'
  compute displacements for loading test for step 70
  *input from 'domain_define.inp'
  compute displacements for loading test for step 80
  *input from 'domain_define.inp'
  compute displacements for loading test for step 90
  *input from 'domain_define.inp'
  compute displacements for loading test for step 100
  *input from 'domain_define.inp'
  compute displacements for loading test for step 110
  *input from 'domain_define.inp'
  compute displacements for loading test for step 120
  *input from 'domain_define.inp'
  compute displacements for loading test for step 130
  *input from 'domain_define.inp'
  compute displacements for loading test for step 140
  *input from 'domain_define.inp'
  compute displacements for loading test for step 150
  *input from 'domain_define.inp'
  compute displacements for loading test for step 160
  *input from 'domain_define.inp'
  compute displacements for loading test for step 170
  *input from 'domain_define.inp'
  compute displacements for loading test for step 180
  *input from 'domain_define.inp'
  compute displacements for loading test for step 190
  *input from 'domain_define.inp'
  compute displacements for loading test for step 200
  *input from 'domain_define.inp'
stop


